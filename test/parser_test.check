#include <stdio.h>
#include <stdlib.h>
#include "../gram.h"
#include "test_helper.h"

#test parse_scalar_declaration_1
    char error = 0;
    void *parser = ParseAlloc(malloc);

    Parse(parser, IDENTIFIER, "a", &error);
    Parse(parser, EQ, "=", &error);
    Parse(parser, NUMBER, "1", &error);
    Parse(parser, SEMIC, ";", &error);

    Parse(parser, 0, 0, &error);
    ParseFree(parser, free);

    ck_assert(error == 0);

#test test_1
    char error = 0;
    void *parser = ParseAlloc(malloc);

    Parse(parser, IDENTIFIER, "a", &error);
    Parse(parser, EQ, "=", &error);
    Parse(parser, LPAREN, "(", &error);
    Parse(parser, NUMBER, "1", &error);
    Parse(parser, ADD, "+", &error);
    Parse(parser, NUMBER, "1", &error);
    Parse(parser, RPAREN, ")", &error);
    Parse(parser, SEMIC, ";", &error);

    Parse(parser, 0, 0, &error);
    ParseFree(parser, free);

    ck_assert(error == 0);

#test test_3
    char error = 0;
    void *parser = ParseAlloc(malloc);

    Parse(parser, IDENTIFIER, "a", &error);
    Parse(parser, EQ, "=", &error);
    Parse(parser, LPAREN, "(", &error);
    Parse(parser, NUMBER, "1", &error);
    Parse(parser, ADD, "+", &error);
    Parse(parser, NUMBER, "2", &error);
    Parse(parser, MULT, "*", &error);
    Parse(parser, NUMBER, "3", &error);
    Parse(parser, RPAREN, ")", &error);
    Parse(parser, SEMIC, ";", &error);

    Parse(parser, 0, 0, &error);
    ParseFree(parser, free);

    ck_assert(error == 0);
